apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  type: LoadBalancer
  ports:
  - name: grafana-front
    port: 80
    targetPort: 3000
  selector:
    app: grafana-app
    tier: grafana-frontend
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: grafana-app
spec:
  selector:
    matchLabels:
      app: grafana-app
      tier: grafana-frontend
  replicas: 5
  strategy:
    rollingUpdate:
      maxSurge: 5
      maxUnavailable: 50%
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: grafana-app
        tier: grafana-frontend
    spec:
      imagePullSecrets:
        - name: acrconnection
      containers:
      - name: grafana-frontend
        image: acrdemo.azurecr.io/versent/ref-grafana:BUILDID
        imagePullPolicy: Always
        env:
        - name: GF_database_type
          value: postgres
        - name: GF_database_user
          value: postgres
        - name: GF_database_password
          value: ""
        - name: GF_database_name
          value: postgres
        - name: GF_dashboards_json_enabled
          value: "true"
        - name: GF_dashboards_json_path
          value: c:/grafanadashboards
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-backend
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  ports:
  - name: grafana-backend
    port: 5432
    protocol: TCP
  selector:
    app: grafana-db
    tier: grafana-backend
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: grafana-db
spec:
  selector:
    matchLabels:
      app: grafana-db
      tier: grafana-backend
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana-db
        tier: grafana-backend
    spec:
      containers:
      - name: grafana-back
        image: mustiks/postgres-windows
        ports:
        - containerPort: 5432